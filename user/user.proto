syntax = "proto3";

package user;

option go_package = "./user";

message LdapSourceReq {
  string host = 1;
  int64  port = 2;
  string dn = 3;  // baseDn
  string password = 4;
  string ou = 5;
  string filter = 6; // 用户过滤器
  string userAttr = 7;  //  用户属性  username, name,email 是jumpserver的用户需要属性
}
message LoginReq {
  string username = 1;
  string password = 2;
}

message LoginResp {
  int64 userId = 1;
  string username = 2;
  int64 roleType = 3;
}

message Empty {}

message LdapVerifyReq {
  string host = 1;
  int64  port = 2;
  string dn = 3;  // baseDn
  string password = 4;
  string ou = 5;
  string filter = 6; // 用户过滤器
  string userAttr = 7;  //  用户属性  username, name,email 是jumpserver的用户需要属性
}

message AddUserReq {
  string username = 1;
  string password = 2;
  string nickName = 3;
  string email = 4;
  string mobile = 5;
  string source = 6;
}

message DeleteUserReq {
  int64 userId = 1;
}

// 获取ldap中所有memberof属性组
message GetMemberOfGroupsReq {
}

message GetMemberOfGroupsResp {
  repeated string groups = 1;
}

// ldap添加新的memberof属性组
message AddMemberOfGroupReq {
  string group = 1;
}

// ldap删除memberof属性组
message DelMemberOfGroupReq {
  string group = 1;
}

// 获取指定memberof属性组中的所有用户
message GetUsersInMemberOfGroupReq {
  string group = 1;
}

message GetUsersInMemberOfGroupResp {
  repeated string users = 1;
}

// 添加用户到属性组
message AddUserToMemberOfGroupReq {
  string username = 1;
  string group = 2;
}

// 移除指定用户的memberof属性
message RemoveUserToMemberOfGroupReq {
  string username = 1;
  string group = 2;
}

service User {
  rpc Login(LoginReq) returns(LoginResp);
  rpc LdapSource(LdapSourceReq) returns(Empty);
  rpc LdapVerify(LdapVerifyReq) returns(Empty);
  rpc AddUser(AddUserReq) returns(Empty);
  rpc DeleteUser(DeleteUserReq) returns(Empty);
  rpc GetMemberGroups(GetMemberOfGroupsReq) returns(GetMemberOfGroupsResp);
  rpc AddMemberGroup(AddMemberOfGroupReq)  returns(Empty);
  rpc DelMemberGroup(DelMemberOfGroupReq) returns(Empty);
  rpc GetUsersInMemberOfGroup(GetUsersInMemberOfGroupReq) returns(GetUsersInMemberOfGroupResp);
  rpc AddUserToMemberOfGroup(AddUserToMemberOfGroupReq) returns(Empty);
  rpc RemoveUserToMemberOfGroup(RemoveUserToMemberOfGroupReq) returns(Empty);
}

