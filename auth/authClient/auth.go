// Code generated by goctl. DO NOT EDIT.
// Source: auth.proto

package authClient

import (
	"context"

	"github.com/Sion-L/auth/auth"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	LoginReq  = auth.LoginReq
	LoginResp = auth.LoginResp

	Auth interface {
		Login(ctx context.Context, in *LoginReq, opts ...grpc.CallOption) (*LoginResp, error)
	}

	defaultAuth struct {
		cli zrpc.Client
	}
)

func NewAuth(cli zrpc.Client) Auth {
	return &defaultAuth{
		cli: cli,
	}
}

func (m *defaultAuth) Login(ctx context.Context, in *LoginReq, opts ...grpc.CallOption) (*LoginResp, error) {
	client := auth.NewAuthClient(m.cli.Conn())
	return client.Login(ctx, in, opts...)
}
